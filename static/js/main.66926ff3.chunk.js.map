{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","onShowClick","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","setFilter","query","setQuery","handleClearQuery","onChange","e","target","value","placeholder","style","pointerEvents","Loader","TodoModal","isUserLoading","user","setSelectedTodo","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","isLoading","setIsLoading","setUser","setIsUserLoading","filter","handleToDoClick","userId","getUser","userData","catch","useEffect","data","filteredTodos","toLowerCase","includes","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66926ff3.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n  onShowClick: (selectedTodo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  onShowClick,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed\n              ? 'has-text-success'\n              : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onShowClick(todo)}\n            >\n              <span className=\"icon\">\n                <i className={selectedTodo?.id === todo.id\n                  ? 'far fa-eye-slash'\n                  : 'far fa-eye'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { FilterType } from '../../types/Todo';\n\ninterface TodoFilterProps {\n  setFilter: (filter: FilterType) => void;\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n  handleClearQuery: () => void;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  setFilter,\n  query,\n  setQuery,\n  handleClearQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          title=\"Filter\"\n          onChange={(e) => setFilter(e.target.value as FilterType)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleClearQuery}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface TodoModalProps {\n  isUserLoading: boolean;\n  user: User | null;\n  selectedTodo: Todo | null;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  isUserLoading,\n  user,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id || ''}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title || ''}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={selectedTodo?.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n              {' by '}\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\n\nimport { User } from './types/User';\nimport { Todo, FilterType } from './types/Todo';\n\nconst filterTodos = (todos: Todo[], query: string, filter: FilterType) => {\n  return todos.filter((todo) => {\n    if (query && !todo.title.toLowerCase().includes(query.toLowerCase())) {\n      return false;\n    }\n\n    switch (filter) {\n      case 'completed':\n        return todo.completed;\n      case 'active':\n        return !todo.completed;\n      default:\n        return true;\n    }\n  });\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserLoading, setIsUserLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterType>('all');\n  const [query, setQuery] = useState<string>('');\n\n  const handleToDoClick = (userId: number) => {\n    setIsUserLoading(true);\n    getUser(userId).then((userData: User) => {\n      setUser(userData);\n      setIsUserLoading(false);\n    }).catch(() => {\n      setIsUserLoading(false);\n    });\n  };\n\n  const handleClearQuery = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos().then((data: Todo[]) => {\n      setTodos(data);\n      setIsLoading(false);\n    }).catch(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleShowClick = (todo: Todo) => {\n    setSelectedTodo(todo);\n    handleToDoClick(todo.userId);\n  };\n\n  const filteredTodos = filterTodos(todos, query, filter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n                handleClearQuery={handleClearQuery}\n              />\n            </div>\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    onShowClick={handleShowClick}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          isUserLoading={isUserLoading}\n          user={user}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}